- hosts: web
  become: yes
  vars:
    host_ip: "{{ hostvars[inventory_hostname].ansible_host }}"
  pre_tasks:
    - name: Copy vagrant key
      copy:
        src: vagrant.key
        dest: /etc/pki/tls/private/vagrant.key
        owner: root
        group: root


    - name: Copy vagrant cert
      copy:
        src: vagrant.crt
        dest: /etc/pki/tls/certs/vagrant.crt
        owner: root
        group: root

  roles:
    - role: geerlingguy.apache
      apache_ports_configuration_items: [] #disable global listening port
      apache_restart_state: stopped
      apache_state: stopped
      apache_vhosts_filename: app-vhost.conf
      apache_listen_ip: "{{ host_ip }}"
      apache_global_vhost_settings: |
        {{ ansible_managed | comment }}
        Listen {{ host_ip }}:80
        Listen {{ host_ip }}:443
      apache_vhosts:
        - servername: "{{ inventory_hostname }}"
          serveralias: "{{ inventory_hostname }}"
          extra_parameters: |
            # redirect all traffic through https
            RewriteEngine On
            RewriteCond %{HTTPS} off
            RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}
      apache_vhosts_ssl:
        - servername: "{{ inventory_hostname }}"
          serveralias: "{{ inventory_hostname }}"
          certificate_file: /etc/pki/tls/certs/vagrant.crt
          certificate_key_file: /etc/pki/tls/private/vagrant.key
          extra_parameters: |
            Header append X-UA-Compatible: IE=edge

            ProxyPreserveHost On
            # forward along the protocol that was used to access the server. 
            # header contains the original protocol (the forwarded protocol) of the request that the proxy received.
            RequestHeader set X-Forwarded-Proto "https" env=HTTPS
            RequestHeader set X-Forwarded-Port "443" env=HTTPS

            # ensuring that regular HTTP requests will never be honored on port 443
            <Location />
              SSLRequireSSL
            </Location>

            # Vagrant isn't protected by the gatekeeper, needs to have a regex for include optional to work
            IncludeOptional conf/access.con[f]

            ProxyPass /app http://{{ app_host }}:8080/app
            ProxyPassReverse /app http://{{ app_host }}:8080/app

  post_tasks:
    - name: Disable default listen.
      lineinfile:
        dest: /etc/httpd/conf/httpd.conf
        regexp: '^(Listen.*)'
        line: '# \1'
        backrefs: yes

    - name: Remove httpd default files.
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/httpd/conf.d/welcome.conf
        - /etc/httpd/conf.d/ssl.conf
        - /etc/httpd/conf.d/autoindex.conf
        - /etc/httpd/conf.d/userdir.conf

    - name: Apache restarted.
      service:
        name: httpd
        state: restarted
